import time
import mysql.connector

# Establish a connection to the MySQL database
db_connection = mysql.connector.connect(
    host="localhost",
    user="Alekwa",
    password="root",
    database="school_project"
)
db_cursor = db_connection.cursor()

vehicle_records = {}

def register_vehicle():
    # Implementation for registering a vehicle

    RegNo = input("\nEnter the vehicle registration number: \n")
    OwnerName = input("\n Enter owner name: \n")
    TimeIN = time.strftime("%Y-%m-%d %H:%M:%S")
    vehicle_records[RegNo] = {"owner": OwnerName, "time_in": TimeIN}  # Fix here
    print("\nVehicle registered successfully.\n")
    time.sleep(3)

def release_vehicle():
    # Implementation for releasing a vehicle

    RegNo = input("\nEnter the vehicle registration number: \n")
    TimeOUT = time.strftime("%Y-%m-%d %H:%M:%S")
    
    if RegNo in vehicle_records:
        TimeIn = vehicle_records[RegNo]["time_in"]
        time_difference = time.mktime(time.strptime(TimeOUT, "%Y-%m-%d %H:%M:%S")) - time.mktime(time.strptime(TimeIn, "%Y-%m-%d %H:%M:%S"))
        parking_fee = time_difference * 0.5
        vehicle_records[RegNo]["time_out"] = TimeOUT
        vehicle_records[RegNo]["parking_fee"] = parking_fee
        print("\nParking fee: KES {}.".format(parking_fee))
        time.sleep(3)
    else:
        print("\nVehicle not found.\n")
        time.sleep(3)

def check_vehicle():
    # Implementation for checking vehicle details

    RegNo = input("\nEnter the vehicle registration number: \n")
    
    if RegNo in vehicle_records:
        vehicle_details = vehicle_records[RegNo]
        print("\nVehicle found.\n")
        print("VEHICLE DETAILS:")
        print("  Vehicle Owner: {}".format(vehicle_details["owner"]))  # Fix here
        print("  Registration Number: {}".format(RegNo))
        print("  Time In: {}".format(vehicle_details["time_in"]))
        print("  Time Out: {}".format(vehicle_details.get("time_out", "Not released yet")))
        print("  Parking Fee: (In KES) {}".format(vehicle_details.get("Parking_Fee", "Not calculated yet\n")))
        time.sleep(3)
    else:
        print("\nVehicle not found.\n")
        time.sleep(3)

def display_registered_vehicles():
    # Implementation for displaying registered vehicles

    print("Registered Vehicles:")
    for RegNo, vehicle_details in vehicle_records.items():
        print("Registration Number: {}".format(RegNo))
        print("  Vehicle Owner: {}".format(vehicle_details["owner"]))  # Fix here
        print("  Time In: {}".format(vehicle_details["time_in"]))
        print("  Time Out: {}".format(vehicle_details.get("time_out", "Not Released Yet")))
        print("  Parking Fee: (In KES) {}".format(vehicle_details.get("parking_fee", "Not Calculated Yet")))
        print("-" * 20)

def main():
    while True:
        print("Choose one of the following options:")
        print("\n1. Register vehicle\n")
        print("\n2. Release vehicle\n")
        print("\n3. Check vehicle\n")
        print("\n4. Show all vehicles\n")
        print("\n5. Exit\n")
        option = input("\nEnter your choice: \n")

        if option == "1":
            register_vehicle()
        elif option == "2":
            release_vehicle()
        elif option == "3":
            check_vehicle()
            time.sleep(3)
        elif option == "4":
            display_registered_vehicles()
            time.sleep(20)
        elif option == "5":
            print("\nExiting...\n")
            time.sleep(2)
            break
        else:
            print("Invalid Option :(")

    db_cursor.close()
    db_connection.close()

if __name__ == "__main__":
    main()
